/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Exchange } from "./Exchange";

export class ExchangeFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_registry: string, overrides?: Overrides): Promise<Exchange> {
    return super.deploy(_registry, overrides || {}) as Promise<Exchange>;
  }
  getDeployTransaction(
    _registry: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  connect(signer: Signer): ExchangeFactory {
    return super.connect(signer) as ExchangeFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_COLLATERAL_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_HUNDRED_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "executeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teller",
    outputs: [
      {
        internalType: "contract ITeller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161099e38038061099e8339818101604052810190610032919061012b565b33806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061019d565b60008151905061012581610186565b92915050565b60006020828403121561013d57600080fd5b600061014b84828501610116565b91505092915050565b600061015f82610166565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61018f81610154565b811461019a57600080fd5b50565b6107f2806101ac6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f32d59b1161005b5780638f32d59b14610105578063938501e2146101235780639eb32fdb1461013f578063dd0081c71461014957610088565b806357edab4e1461008d5780637a9fffb7146100ab5780637b103999146100c95780638da5cb5b146100e7575b600080fd5b610095610167565b6040516100a29190610614565b60405180910390f35b6100b361018d565b6040516100c0919061066a565b60405180910390f35b6100d1610199565b6040516100de91906105f9565b60405180910390f35b6100ef6101bf565b6040516100fc919061057e565b60405180910390f35b61010d6101e8565b60405161011a91906105de565b60405180910390f35b61013d60048036038101906101389190610481565b61023f565b005b6101476102d8565b005b61015161040d565b60405161015e919061066a565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6714d1120d7b16000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f255ec3f858585856040518563ffffffff1660e01b81526004016102a09493929190610599565b600060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b5050505050505050565b6102e06101e8565b61031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103169061064a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4e5699160046040518263ffffffff1660e01b815260040161037b919061062f565b60206040518083038186803b15801561039357600080fd5b505afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190610458565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b670de0b6b3a764000081565b6000813590506104288161078e565b92915050565b60008151905061043d8161078e565b92915050565b600081359050610452816107a5565b92915050565b60006020828403121561046a57600080fd5b60006104788482850161042e565b91505092915050565b6000806000806080858703121561049757600080fd5b60006104a587828801610419565b94505060206104b687828801610419565b93505060406104c787828801610443565b92505060606104d887828801610443565b91505092959194509250565b6104ed81610696565b82525050565b6104fc816106a8565b82525050565b61050b816106f1565b82525050565b61051a81610715565b82525050565b61052981610739565b82525050565b600061053c602083610685565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b610578816106e7565b82525050565b600060208201905061059360008301846104e4565b92915050565b60006080820190506105ae60008301876104e4565b6105bb60208301866104e4565b6105c8604083018561056f565b6105d5606083018461056f565b95945050505050565b60006020820190506105f360008301846104f3565b92915050565b600060208201905061060e6000830184610502565b92915050565b60006020820190506106296000830184610511565b92915050565b60006020820190506106446000830184610520565b92915050565b600060208201905081810360008301526106638161052f565b9050919050565b600060208201905061067f600083018461056f565b92915050565b600082825260208201905092915050565b60006106a1826106c7565b9050919050565b60008115159050919050565b60008190506106c28261077a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106fc82610703565b9050919050565b600061070e826106c7565b9050919050565b600061072082610727565b9050919050565b6000610732826106c7565b9050919050565b6000610744826106b4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061078b5761078a61074b565b5b50565b61079781610696565b81146107a257600080fd5b50565b6107ae816106e7565b81146107b957600080fd5b5056fea2646970667358221220ebeb6019f679fbeb0af734b1b42522ccb68745d16e976a6475d6133278de956d64736f6c63430008000033";
