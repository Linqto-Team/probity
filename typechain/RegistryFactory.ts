/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Registry } from "./Registry";

export class RegistryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Registry> {
    return super.deploy(overrides || {}) as Promise<Registry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  connect(signer: Signer): RegistryFactory {
    return super.connect(signer) as RegistryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum ProbityBase.Contract",
        name: "name",
        type: "uint8",
      },
    ],
    name: "getContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ProbityBase.Contract",
        name: "name",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setupContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350610502806100bd6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638da5cb5b146100515780638f32d59b1461006f578063bbb2111a1461008d578063f4e56991146100a9575b600080fd5b6100596100d9565b6040516100669190610400565b60405180910390f35b610077610102565b604051610084919061041b565b60405180910390f35b6100a760048036038101906100a29190610366565b610159565b005b6100c360048036038101906100be919061033d565b610266565b6040516100d09190610400565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610161610102565b6101a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019790610436565b60405180910390fd5b80600160008460058111156101de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811115610216577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600160008360058111156102a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058111156102dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600081359050610322816104a5565b92915050565b600081359050610337816104bc565b92915050565b60006020828403121561034f57600080fd5b600061035d84828501610328565b91505092915050565b6000806040838503121561037957600080fd5b600061038785828601610328565b925050602061039885828601610313565b9150509250929050565b6103ab81610467565b82525050565b6103ba81610479565b82525050565b60006103cd602083610456565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600060208201905061041560008301846103a2565b92915050565b600060208201905061043060008301846103b1565b92915050565b6000602082019050818103600083015261044f816103c0565b9050919050565b600082825260208201905092915050565b600061047282610485565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6104ae81610467565b81146104b957600080fd5b50565b600681106104c957600080fd5b5056fea2646970667358221220e96df9008b846179a86607ee6966a848d72124eeb99913804966424c90585c7164736f6c63430008000033";
