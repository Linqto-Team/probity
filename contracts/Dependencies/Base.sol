// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

/**
 * @notice Contains global system constants and common functions.
 */
contract Base {
  // --- Registered contracts ---

  enum Contract {Aurei, Bridge, TcnToken, Teller, Treasury, Vault}
  enum Activity {Borrow, Repay, Stake, Redeem, Withdraw}

  // --- Math constants ---

  // One as 1e18, or as 100%
  uint256 constant ONE = 10**18;

  // Minimum collateral ratio for Spark vaults (150%)
  uint256 public constant LIQUIDATION_RATIO = 1500000000000000000;

  // Seconds in year: 365.25 * 24 * 60 * 60;
  uint256 public constant SECONDS_IN_YEAR = 31557600;

  // Follows R^(1/31557600) * G = 1
  mapping(uint256 => uint256) public APR_TO_MPR;

  /**
   * Set storage for scaled utilization ratios at rates in 0.25% increments.
   */
  constructor() {
    APR_TO_MPR[1010000000000000000000000000] = 1000000000315306957903541052; // 1.00% (MIN)
    APR_TO_MPR[1012500000000000000000000000] = 1000000000393645904663288411; // 1.25%
    APR_TO_MPR[1015000000000000000000000000] = 1000000000471791660242312990; // 1.50%
    APR_TO_MPR[1017500000000000000000000000] = 1000000000549745175152155634; // 1.75%
    APR_TO_MPR[1020000000000000000000000000] = 1000000000627507392906712187; // 2.00%
    APR_TO_MPR[1022500000000000000000000000] = 1000000000705079250090754054; // 2.25%
    APR_TO_MPR[1025000000000000000000000000] = 1000000000782461676427612129; // 2.50%
    APR_TO_MPR[1027500000000000000000000000] = 1000000000859655594846036300; // 2.75%
    APR_TO_MPR[1030000000000000000000000000] = 1000000000936661921546242584; // 3.00%
    APR_TO_MPR[1032500000000000000000000000] = 1000000001013481566065159661; // 3.25%
    APR_TO_MPR[1035000000000000000000000000] = 1000000001090115431340886480; // 3.50%
    APR_TO_MPR[1037500000000000000000000000] = 1000000001166564413776372305; // 3.75%
    APR_TO_MPR[1040000000000000000000000000] = 1000000001242829403302330469; // 4.00%
    APR_TO_MPR[1042500000000000000000000000] = 1000000001318911283439396845; // 4.25%
    APR_TO_MPR[1045000000000000000000000000] = 1000000001394810931359543915; // 4.50%
    APR_TO_MPR[1047500000000000000000000000] = 1000000001470529217946761087; // 4.75%
    APR_TO_MPR[1050000000000000000000000000] = 1000000001546067007857011769; // 5.00%
    APR_TO_MPR[1052500000000000000000000000] = 1000000001621425159577477510; // 5.25%
    APR_TO_MPR[1055000000000000000000000000] = 1000000001696604525485099373; // 5.50%
    APR_TO_MPR[1057500000000000000000000000] = 1000000001771605951904426492; // 5.75%
    APR_TO_MPR[1060000000000000000000000000] = 1000000001846430279164781657; // 6.00%
    APR_TO_MPR[1062500000000000000000000000] = 1000000001921078341656753572; // 6.25%
    APR_TO_MPR[1065000000000000000000000000] = 1000000001995550967888025260; // 6.50%
    APR_TO_MPR[1067500000000000000000000000] = 1000000002069848980538547992; // 6.75%
    APR_TO_MPR[1070000000000000000000000000] = 1000000002143973196515069892; // 7.00%
    APR_TO_MPR[1072500000000000000000000000] = 1000000002217924427005028271; // 7.25%
    APR_TO_MPR[1075000000000000000000000000] = 1000000002291703477529814573; // 7.50%
    APR_TO_MPR[1077500000000000000000000000] = 1000000002365311147997420685; // 7.75%
    APR_TO_MPR[1080000000000000000000000000] = 1000000002438748232754475196; // 8.00%
    APR_TO_MPR[1082500000000000000000000000] = 1000000002512015520637678092; // 8.25%
    APR_TO_MPR[1085000000000000000000000000] = 1000000002585113795024642190; // 8.50%
    APR_TO_MPR[1087500000000000000000000000] = 1000000002658043833884149519; // 8.75%
    APR_TO_MPR[1090000000000000000000000000] = 1000000002730806409825830700; // 9.00%
    APR_TO_MPR[1092500000000000000000000000] = 1000000002803402290149275263; // 9.25%
    APR_TO_MPR[1095000000000000000000000000] = 1000000002875832236892580700; // 9.50%
    APR_TO_MPR[1097500000000000000000000000] = 1000000002948097006880347934; // 9.75%
    APR_TO_MPR[1100000000000000000000000000] = 1000000003020197351771130766; // 10.00%
  }
}
